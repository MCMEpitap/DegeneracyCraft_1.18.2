buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url 'https://maven.blamejared.com' }
        maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
        maven {
            url "https://maven.firstdarkdev.xyz/snapshots"
        }

//        maven {
//            // location of the maven that hosts JEI files before January 2023
//            name = "Progwml6's maven"
//            url = "https://dvs1.progwml6.com/files/maven/"
//        }
        maven {
            // location of the maven that hosts JEI files since January 2023
            name = "Jared's maven"
            url = "https://maven.blamejared.com/"
        }
        maven {
            // location of a maven mirror for JEI files, as a fallback
            name = "ModMaven"
            url = "https://modmaven.dev"
        }
        maven { url 'https://modmaven.dev/' }

//        maven {
//            // Shedaniel's maven (Architectury API)
//            url = "https://maven.architectury.dev"
//            content {
//                includeGroup "dev.architectury"
//            }
//        }
//
//        maven {
//            // saps.dev Maven (KubeJS and Rhino)
//            url = "https://maven.saps.dev/minecraft"
//            content {
//                includeGroup "dev.latvian.mods"
//            }
//        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin:'eclipse'
apply plugin:'maven-publish'
// This should be below the net.minecraftforge.gradle plugin


version = '1.0'
group = 'net.epitap.degeneracycraft'
archivesBaseName = 'degeneracycraft'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
repositories {
    maven { url 'https://dvs1.progwml6.com/files/maven/' }
    maven { url 'https://maven.blamejared.com' }
    maven {
        url 'https://cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }
    maven {
        url 'https://maven.blakesmods.com'
    }
    maven {
        url "https://maven.firstdarkdev.xyz/snapshots"
    }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }

//    maven {
//        // location of the maven that hosts JEI files before January 2023
//        name = "Progwml6's maven"
//        url = "https://dvs1.progwml6.com/files/maven/"
//    }
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven { url 'https://modmaven.dev/' }

//    maven {
//        // Shedaniel's maven (Architectury API)
//        url = "https://maven.architectury.dev"
//        content {
//            includeGroup "dev.architectury"
//        }
//    }
//
//    maven {
//        // saps.dev Maven (KubeJS and Rhino)
//        url = "https://maven.saps.dev/minecraft"
//        content {
//            includeGroup "dev.latvian.mods"
//        }
//    }
}
minecraft {

    mappings channel: 'parchment', version: '2022.11.06-1.18.2'


    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'
//
//            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
//            property 'forge.enabledGameTestNamespaces', 'degeneracycraft'

            mods {
                degeneracycraft {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

//            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
//            property 'forge.enabledGameTestNamespaces', 'degeneracycraft'

            mods {
                degeneracycraft {
                    source sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

//            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
//            property 'forge.enabledGameTestNamespaces', 'degeneracycraft'

            mods {
                degeneracycraft {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'degeneracycraft', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                degeneracycraft {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
//    maven {
//        // location of the maven that hosts JEI files
//        name = "Progwml6 maven"
//        url = "https://dvs1.progwml6.com/files/maven/"
//    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven { // TOP
        url "https://cursemaven.com"
    }
    maven { url 'https://maven.blamejared.com' }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
//    maven {
//        // location of the maven that hosts JEI files before January 2023
//        name = "Progwml6's maven"
//        url = "https://dvs1.progwml6.com/files/maven/"
//    }
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven { url 'https://modmaven.dev/' }

//    maven {
//        // Shedaniel's maven (Architectury API)
//        url = "https://maven.architectury.dev"
//        content {
//            includeGroup "dev.architectury"
//        }
//    }
//
//    maven {
//        // saps.dev Maven (KubeJS and Rhino)
//        url = "https://maven.saps.dev/minecraft"
//        content {
//            includeGroup "dev.latvian.mods"
//        }
//    }
}


dependencies {
//
    implementation 'org.projectlombok:lombok:1.18.22'
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.0'
    implementation 'com.google.code.gson:gson:2.8.8'


    dependencies {
        /* minecraft dependency is here */
        /* JEI 10+ is here */
        // compile against the JEI API but do not include it at runtime
        compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}"))
        compileOnly(fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}"))
        // at runtime, use the full JEI jar
        runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")

//        // compile against the JEI API but do not include it at runtime
//        compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
//        // at runtime, use the full JEI jar
//        runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")

        implementation fg.deobf("curse.maven:the-one-probe-245211:3965688")
        implementation fg.deobf("curse.maven:configured-457570:4010624")
        implementation fg.deobf("curse.maven:catalogue-459701:3803098")

//        implementation fg.deobf("curse.maven:pipez-1.18.2-1.1.5-443900:3819249")
        implementation fg.deobf("curse.maven:embeddium-908741:5322305")
        implementation fg.deobf("curse.maven:better-fps-render-distance-551520:3750013")
        implementation fg.deobf("curse.maven:fastfurnace-299540:3717883")
        implementation fg.deobf("curse.maven:fastworkbench-288885:4030000")
        implementation fg.deobf("curse.maven:radon-596879:3707321")
        implementation fg.deobf("curse.maven:ferritecore-429235:4074294")
        implementation fg.deobf("curse.maven:out-of-sight-428199:3929018")
        implementation fg.deobf("curse.maven:fastsuite-475117:3755834")
        implementation fg.deobf("curse.maven:placebo-283644:4500363")

        implementation fg.deobf("curse.maven:radium-reforged-570017:3707226")

        implementation fg.deobf('com.blakebr0.cucumber:Cucumber:1.18.2-5.1.3')
//        implementation fg.deobf('com.blakebr0.extendedcrafting:ExtendedCrafting:1.18.2-4.1.0')
//        implementation fg.deobf("com.lowdragmc.ldlib:LowDragLib:1.18.2-0.8.1.a")
//        implementation fg.deobf("com.lowdragmc.multiblocked:Multiblocked:1.18.2-0.13.2")

//        implementation fg.deobf("com.lowdragmc.ldlib:LowDragLib:1.18.2-1.0.6.a") //1.18.2-40.1.51
//        implementation fg.deobf("com.lowdragmc.multiblocked:Multiblocked:1.18.2-1.0.4.a")

//        implementation fg.deobf("com.lowdragmc.ldlib:LowDragLib:1.18.2-1.0.5")
//        implementation fg.deobf("com.lowdragmc.multiblocked:Multiblocked:1.18.2-1.0.3")

//        implementation fg.deobf("com.lowdragmc.ldlib:LowDragLib:1.18.2-1.0.7")
//        implementation fg.deobf("com.lowdragmc.ldlib:LowDragLib:1.18.2-1.0.5")
//        implementation fg.deobf("com.lowdragmc.multiblocked:Multiblocked:1.18.2-1.0.5")

//        implementation fg.deobf("dev.latvian.mods:kubejs-forge:1802.5.5-build.569")
//       implementation fg.deobf("dev.latvian.mods:rhino:1802.2.1-build.255")
//        implementation fg.deobf("dev.architectury:architectury-forge:architectury-4.11.89-forge")
//        implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.18:3.0.57')
        compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.18.2-71.1:api")
        runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.18.2-71.1")

//        runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}")// core
//        runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:generators")// Mekanism: Generators
//        runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:tools")// Mekanism: Tools
////        runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:additions")// Mekanism: Additions

        implementation fg.deobf("curse.maven:exponential-power-254249:3863542")
//        implementation fg.deobf("curse.maven:AdditionalEnchantedMiner-1.18.2-18.20.jar-282837:4724064")

//        implementation fg.deobf("curse.maven:more-chests-737045:4199855")
        //        implementation fg.deobf("curse.maven:iron-chests-228756:3966367")
//        implementation fg.deobf("curse.maven:compactstorage-223703:4352472")
    }
}
// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "degeneracycraft",
                "Specification-Vendor"    : "degeneracycraftsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "degeneracycraftsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish plugi
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
